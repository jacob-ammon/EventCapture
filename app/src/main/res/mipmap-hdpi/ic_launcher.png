package byui.anderson.a1;

import android.app.Activity;
import android.media.AudioFormat;
import android.media.AudioRecord;
import android.media.MediaRecorder;

import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.lang.ref.WeakReference;

public class Recorder {

    private Boolean isListening;
    private Boolean isRecording;
    private Integer minBufferSize;
    private RingBuffer ringBuffer;

    private File file;
    private WeakReference<Activity> mainActivity;
    private AudioRecord audioRecord;

////////////////////////////////////////////////////////////////////////////////////////////////////

    public Recorder() {
        this.isListening = false;
        this.isRecording = false;
        this.minBufferSize = 0;
        this.ringBuffer = null;
        this.file = null;
        this.mainActivity = null;
        this.audioRecord = null;
    }

    public Recorder(WeakReference<Activity> mainActivity) {
        this.isListening = false;
        this.isRecording = false;
        this.minBufferSize = 0;
        this.ringBuffer = null;
        this.file = null;
        this.mainActivity = mainActivity;
        this.audioRecord = null;
    }

    public Recorder(File file, WeakReference<Activity> mainActivity) {
        this.isListening = false;
        this.isRecording = false;
        this.minBufferSize = 0;
        this.ringBuffer = null;
        this.file = file;
        this.mainActivity = mainActivity;
        this.audioRecord = null;
    }

////////////////////////////////////////////////////////////////////////////////////////////////////

    public Boolean getListening() {
        return isListening;
    }

    public void setListening(Boolean listening) {
        isListening = listening;
    }

    public Boolean getRecording() {
        return isRecording;
    }

    public void setRecording(Boolean recording) {
        isRecording = recording;
    }

////////////////////////////////////////////////////////////////////////////////////////////////////

    public void listen(Integer frequency) {
        minBufferSize = AudioRecord.getMinBufferSize(
                frequency,
                AudioFormat.CHANNEL_CONFIGURATION_MONO,
                AudioFormat.ENCODING_PCM_16BIT);

        short[] audioBuffer = new short[minBufferSize];
        ringBuffer = new RingBuffer();

        audioRecord = new AudioRecord(
                MediaRecorder.AudioSource.MIC,
                frequency,
                AudioFormat.CHANNEL_CONFIGURATION_MONO,
                AudioFormat.ENCODING_PCM_16BIT,
                minBufferSize);

        audioRecord.startRecording();
        while (isListening) {
            Integer numberOfShortsRead = audioRecord.read(audioBuffer, 0, minBufferSize);

            for (Integer i = 0; i < numberOfShortsRead; i++) {
                ringBuffer.add(audioBuffer[i]);
            }
        }
        audioRecord.stop();
    }

    public void record() {
        try {
            file.createNewFile();
            OutputStream outputStream = new FileOutputStream(file);
            BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(outputStream);
            DataOutputStream dataOutputStream = new DataOutputStream(bufferedOutputStream);

            for (Integer i = 0; i < ringBuffer.getSize(); i++) {
                dataOutputStre